#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        ParaLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 16>;
        };

        ParaRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 19>;
        };

        bootloaderLeft {
            bindings = <&bootloader>;
            key-positions = <0 13>;
        };

        bootloaderRight {
            bindings = <&bootloader>;
            key-positions = <11 22>;
        };

        resetLeft {
            bindings = <&sys_reset>;
            key-positions = <0 12>;
        };

        resetRight {
            bindings = <&sys_reset>;
            key-positions = <11 23>;
        };

        zmk_studio {
            bindings = <&studio_unlock>;
            key-positions = <1 2>;
        };
    };

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 1 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <2>;
        scale-divisor = <1>;

        // bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <6>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <2>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 2 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };

        win_hold_tap: win_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "WIN_HOLD_TAP";
            bindings = <&win_dot>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <24>;
        };
    };

    macros {
        win_dot: win_dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp KP_DOT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_GUI &kp KP_DOT>;

            label = "WIN_DOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
&kp ESC          &kp N1   &kp N2  &kp N3  &kp N4     &kp N5       &kp N6        &kp N7  &kp N8     &kp N9   &kp N0          &kp DEL
&caps_word       &kp Q    &kp W   &kp E   &kp R      &kp T        &kp Y         &kp U   &kp I      &kp O    &kp P           &mt RIGHT_BRACKET LEFT_BRACKET
&kp LEFT_GUI     &lt 5 A  &kp S   &kp D   &kp F      &kp G        &kp H         &kp J   &kp K      &kp L    &kp SEMI        &kp APOS
&mt LSHFT GRAVE  &kp Z    &kp X   &kp C   &kp V      &kp B        &kp N         &kp M   &kp COMMA  &kp DOT  &mt QMARK FSLH  &kp RSHFT
                                  &mo 2   &kp RET    &kp SPACE    &kp BSPC      &mo 1
                                          &kp LCTRL  &kp TAB      &kp LEFT_ALT
            >;
        };

        Nav {
            display-name = "Nav";
            display-name = "Nav";
            bindings = <
&trans        &trans  &trans    &trans    &sys_reset  &bootloader    &trans  &trans  &trans  &trans   &trans    &trans
&trans        &trans  &trans    &kp UP    &trans      &trans         &kp N7  &kp N8  &kp N9  &kp N0   &kp HOME  &kp F1
&trans        &trans  &kp LEFT  &kp DOWN  &kp RIGHT   &trans         &kp N4  &kp N5  &kp N6  &none    &trans    &kp F10
&kp LEFT_ALT  &trans  &trans    &trans    &kp MINUS   &kp PLUS       &kp N1  &kp N2  &kp N3  &kp DOT  &trans    &kp F20
                                &trans    &trans      &trans         &trans  &trans
                                          &trans      &trans         &trans
            >;
        };

        Media {
            display-name = "Media";
            display-name = "Media";
            bindings = <
&trans  &trans        &trans          &trans            &trans             &trans             &bootloader  &sys_reset  &trans           &trans    &trans    &trans
&trans  &kp EXCL      &kp AT          &kp HASH          &kp DLLR           &kp PRCNT          &kp CARET    &kp AMPS    &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DEL
&trans  &bt BT_CLR    &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT         &kp C_MUTE         &kp UNDER    &kp EQUAL   &kp LBKT         &kp RBKT  &kp BSLH  &kp TILDE
&trans  &out OUT_TOG  &bootloader     &trans            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp MINUS    &kp PLUS    &kp LBRC         &kp RBRC  &kp PIPE  &kp GRAVE
                                      &trans            &trans             &trans             &trans       &trans
                                                        &trans             &trans             &trans
            >;
        };

        Game {
            display-name = "Game";
            display-name = "Game";
            bindings = <
&trans  &trans  &trans          &trans            &trans             &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans            &trans             &trans             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT         &kp C_MUTE         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans            &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &trans  &trans  &trans  &trans  &trans  &to 0
                                &trans            &trans             &trans             &trans  &trans
                                                  &trans             &trans             &trans
            >;
        };

        Game_++ {
            display-name = "Game ++";
            display-name = "Gameq";
            bindings = <
&trans   &trans        &trans        &trans        &trans        &trans          &trans         &trans         &trans         &trans         &trans         &trans
&kt F5   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
&to 3    &kp L         &kp O         &kp Y         &kp K         &kp G           &trans         &trans         &trans         &trans         &trans         &kp LA(F4)
&kp F10  &none         &to 0         &none         &kp NUMBER_6  &kp NUMBER_7    &trans         &trans         &trans         &trans         &trans         &to 0
                                     &trans        &trans        &trans          &trans         &trans
                                                   &trans        &trans          &trans
            >;
        };

        Mouse {
            display-name = "Mouse";
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans     &trans     &trans     &trans  &trans
                        &trans  &kp LC(V)  &mkp LCLK    &trans  &trans
                                &kp LC(C)  &trans       &trans
            >;
        };
    };
};
